<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-03-08T09:51:04.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>404 Not Found 探秘Nginx转发处理流程</title>
    <link href="http://yoursite.com/2018/03/08/404-Not-Found-%E6%8E%A2%E7%A7%98Nginx%E8%BD%AC%E5%8F%91%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B/"/>
    <id>http://yoursite.com/2018/03/08/404-Not-Found-探秘Nginx转发处理流程/</id>
    <published>2018-03-08T09:38:36.000Z</published>
    <updated>2018-03-08T09:51:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="404-Not-Found-探秘Nginx转发处理流程"><a href="#404-Not-Found-探秘Nginx转发处理流程" class="headerlink" title="404 Not Found 探秘Nginx转发处理流程"></a>404 Not Found 探秘Nginx转发处理流程</h1><h2 id="一、问题描述"><a href="#一、问题描述" class="headerlink" title="一、问题描述"></a>一、问题描述</h2><h3 id="访问一个链接地址后报404-Not-Found-nginx-1-10-2"><a href="#访问一个链接地址后报404-Not-Found-nginx-1-10-2" class="headerlink" title="访问一个链接地址后报404 Not Found nginx/1.10.2"></a>访问一个链接地址后报404 Not Found nginx/1.10.2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">112.95.211.154 - - [08/Mar/2018:15:22:21 +0800] &quot;GET /phihome/qr/?m=phicomm&amp;c=echo&amp;p=r1&amp;s=BZHCA HTTP/1.1&quot; 404 571 &quot;-&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36&quot; &quot;-&quot;</span><br></pre></td></tr></table></figure><h2 id="二、探秘问题"><a href="#二、探秘问题" class="headerlink" title="二、探秘问题"></a>二、探秘问题</h2><h3 id="1-我们需要先找到nginx的配置文件"><a href="#1-我们需要先找到nginx的配置文件" class="headerlink" title="1.我们需要先找到nginx的配置文件"></a>1.我们需要先找到nginx的配置文件</h3><p>查80端口对应的进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netstat -lntp|grep 80  </span><br><span class="line">tcp        0      0 0.0.0.0:1080                0.0.0.0:*                   LISTEN      18107/nginx</span><br></pre></td></tr></table></figure><h3 id="2-拿进程号18107查对应进程信息"><a href="#2-拿进程号18107查对应进程信息" class="headerlink" title="2.拿进程号18107查对应进程信息"></a>2.拿进程号18107查对应进程信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ps -ef|grep 18107</span><br><span class="line">ps -ef|grep nginx</span><br><span class="line">root     18152     1  0  2017 ?        00:00:00 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><h3 id="3-每一次请求都会记录到一个叫做access-log的文件中，寻找它在哪里"><a href="#3-每一次请求都会记录到一个叫做access-log的文件中，寻找它在哪里" class="headerlink" title="3.每一次请求都会记录到一个叫做access.log的文件中，寻找它在哪里"></a>3.每一次请求都会记录到一个叫做access.log的文件中，寻找它在哪里</h3><ul><li>进入到nginx的配置文件或者在目录中grep access.log * </li><li>发现在http 标签下面的    access_log  /var/log/nginx/access.log  main;</li></ul><h3 id="4-tail-f-var-log-nginx-access-log-观察自己的请求信息"><a href="#4-tail-f-var-log-nginx-access-log-观察自己的请求信息" class="headerlink" title="4. tail -f /var/log/nginx/access.log 观察自己的请求信息"></a>4. tail -f /var/log/nginx/access.log 观察自己的请求信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">112.95.211.154 - - [08/Mar/2018:15:22:21 +0800] &quot;GET /phihome/qr/?m=phicomm&amp;c=echo&amp;p=r1&amp;s=BZHCA HTTP/1.1&quot; 404 571 &quot;-&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36&quot; &quot;-&quot;</span><br></pre></td></tr></table></figure><p><strong>发现请求返回的是404</strong></p><h3 id="5-寻找请求进来之后是如何进行转发的"><a href="#5-寻找请求进来之后是如何进行转发的" class="headerlink" title="5. 寻找请求进来之后是如何进行转发的"></a>5. 寻找请求进来之后是如何进行转发的</h3><h4 id="5-1-先定位location-按照请求中的phihome作为条件进行查找-当然也有可能配置成phihome-qr-找到了如下信息"><a href="#5-1-先定位location-按照请求中的phihome作为条件进行查找-当然也有可能配置成phihome-qr-找到了如下信息" class="headerlink" title="5.1 先定位location 按照请求中的phihome作为条件进行查找 当然也有可能配置成phihome/qr 找到了如下信息"></a>5.1 先定位location 按照请求中的phihome作为条件进行查找 当然也有可能配置成phihome/qr 找到了如下信息</h4><pre><code>location /phihome/qr {       proxy_pass http://proxy_phihome_app_download;       proxy_set_header Host    $host;       proxy_set_header X-Real-IP $remote_addr;       proxy_redirect http:// $scheme://;       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;}</code></pre><h3 id="5-2-根据proxy-pass可知它并没有将请求立即交给项目应用而是转了一下，我们看一下转到哪里去了-发现他将请求转到了71-20机器上的5007端口"><a href="#5-2-根据proxy-pass可知它并没有将请求立即交给项目应用而是转了一下，我们看一下转到哪里去了-发现他将请求转到了71-20机器上的5007端口" class="headerlink" title="5.2 根据proxy_pass可知它并没有将请求立即交给项目应用而是转了一下，我们看一下转到哪里去了,发现他将请求转到了71.20机器上的5007端口"></a>5.2 根据proxy_pass可知它并没有将请求立即交给项目应用而是转了一下，我们看一下转到哪里去了,发现他将请求转到了71.20机器上的5007端口</h3><pre><code>upstream proxy_phihome_app_download{          server 192.168.71.20:5007;}</code></pre><h2 id="6-登录71-20端口进行继续进行探究"><a href="#6-登录71-20端口进行继续进行探究" class="headerlink" title="6. 登录71.20端口进行继续进行探究"></a>6. 登录71.20端口进行继续进行探究</h2><h3 id="6-1-登录上去之后发现是web02test-找5007端口"><a href="#6-1-登录上去之后发现是web02test-找5007端口" class="headerlink" title="6.1 登录上去之后发现是web02test 找5007端口"></a>6.1 登录上去之后发现是web02test 找5007端口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web02test ~]# netstat -lntp|grep 5007</span><br><span class="line">tcp        0      0 0.0.0.0:5007                0.0.0.0:*                   LISTEN      1995/nginx</span><br><span class="line">[root@web02test ~]# ps -ef|grep 1995</span><br><span class="line">root      1995     1  0  2017 ?        00:00:00 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><h3 id="6-2-发现居然又是ng进行-what-fuck"><a href="#6-2-发现居然又是ng进行-what-fuck" class="headerlink" title="6.2 发现居然又是ng进行 what fuck!"></a>6.2 发现居然又是ng进行 what fuck!</h3><p>重复上述步骤 找到access.log位置进行观察</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.71.15 - - [08/Mar/2018:16:12:58 +0800] &quot;GET /phihome/qr/?m=phicomm&amp;c=echo&amp;p=r1&amp;s=BZHCA HTTP/1.0&quot; 304 0 &quot;-&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36&quot; &quot;112.95.211.154&quot;</span><br></pre></td></tr></table></figure><h3 id="6-3-进入到nginx-conf找转发-没有找到但是发现"><a href="#6-3-进入到nginx-conf找转发-没有找到但是发现" class="headerlink" title="6.3 进入到nginx.conf找转发 没有找到但是发现"></a>6.3 进入到nginx.conf找转发 没有找到但是发现</h3><ul><li>include /etc/nginx/conf.d/*.conf;</li><li>进入到conf.d目录搜索grep phihome * 找到了nginx_phihome_app_download.conf文件</li><li>打开看看 哇哦，豁然开朗，它将请求交给了项目应用处理了</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       5007;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                root   /data/deploy/static/com.phicomm.smarthome.phihome/phihome-download-web/HEAD/;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">              root   /data/thinkphp/Public;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-4-让我们看看为啥没有找到上面那个路径"><a href="#6-4-让我们看看为啥没有找到上面那个路径" class="headerlink" title="6.4 让我们看看为啥没有找到上面那个路径"></a>6.4 让我们看看为啥没有找到上面那个路径</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web02test conf.d]# cd /data/deploy/static/com.phicomm.smarthome.phihome/phihome-download-web/HEAD</span><br><span class="line">-bash: cd: /data/deploy/static/com.phicomm.smarthome.phihome/phihome-download-web/HEAD: No such file or directory</span><br></pre></td></tr></table></figure><p>没有找到!进入到父级目录看看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web02test ~]# cd /data/deploy/static/com.phicomm.smarthome.phihome/phihome-download-web</span><br><span class="line">[root@web02test phihome-download-web]# ll</span><br><span class="line">total 8</span><br><span class="line">lrwxrwxrwx  1 root root   77 Mar  8 15:43 HAED -&gt; /root/deploy/static/com.phicomm.smarthome.phihome/phihome-download-web/www/12</span><br><span class="line">drwxr-xr-x 12 root root 4096 Mar  7 19:53 www</span><br></pre></td></tr></table></figure><h2 id="三、解决问题"><a href="#三、解决问题" class="headerlink" title="三、解决问题"></a>三、解决问题</h2><h3 id="原来软连接HEAD被我误写成HAED了，真想抽自己两个大嘴巴子！"><a href="#原来软连接HEAD被我误写成HAED了，真想抽自己两个大嘴巴子！" class="headerlink" title="原来软连接HEAD被我误写成HAED了，真想抽自己两个大嘴巴子！"></a>原来软连接HEAD被我误写成HAED了，真想抽自己两个大嘴巴子！</h3><h3 id="改过来后在进行请求，成功！"><a href="#改过来后在进行请求，成功！" class="headerlink" title="改过来后在进行请求，成功！"></a>改过来后在进行请求，成功！</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">112.95.211.154 - - [08/Mar/2018:16:03:35 +0800] &quot;GET /phihome/qr/static/images/echo.png HTTP/1.1&quot; 200 625298 &quot;https://sitresourcehome.phicomm.com/phihome/qr/static/css/index.css?version=1.0&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36&quot; &quot;-&quot;</span><br></pre></td></tr></table></figure><p><img src="/404 Not Found 探秘Nginx转发处理流程/nginx.jpg" alt="nginx"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;404-Not-Found-探秘Nginx转发处理流程&quot;&gt;&lt;a href=&quot;#404-Not-Found-探秘Nginx转发处理流程&quot; class=&quot;headerlink&quot; title=&quot;404 Not Found 探秘Nginx转发处理流程&quot;&gt;&lt;/a&gt;404 N
      
    
    </summary>
    
    
      <category term="运维" scheme="http://yoursite.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/03/07/hello-world/"/>
    <id>http://yoursite.com/2018/03/07/hello-world/</id>
    <published>2018-03-07T09:58:58.000Z</published>
    <updated>2018-03-07T09:58:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
